pipeline {
    agent { label 'maven' }
    options {
        office365ConnectorWebhooks([[
                    startNotification: true,
                    notifySuccess:true,
                    notifyAborted:false,
                    notifyNotBuilt:false,
                    notifyUnstable:true,
                    notifyFailure:true,
                    url: 'https://outlook.office.com/webhook/97ff97f5-b5b6-47bf-8b87-a5303cfdb12d@521e430f-ba3c-4d47-9f97-16b945b0a850/JenkinsCI/785447a441c84a12b33ecc6d8150d959/dc81ee26-68e3-4127-a13f-1d6c9a472eb6'
            ]]
        )
    }
    stages {
        stage("Test") {
            environment {
                CI = true
            }
            steps {
               sh 'npm i '
               sh 'npm test'
            }
            post {
                success{
                    publishChecks name: 'Test', title: 'Automated Tests'
                }
                failure {
                    publishChecks conclusion: 'FAILURE', status: 'COMPLETED', name: 'Test', title: 'Automated Tests'
                }

            }
        }
        stage("SonarQube analysis") {
            steps {
                script {
                    withSonarQubeEnv("Sonar-OCP") {
                        sh "/usr/local/sonar/bin/sonar-scanner -D'sonar.branch.name=${BRANCH_NAME}'"
                    }
                }
                withSonarQubeEnv("Sonar-OCP") {
                    waitForQualityGate abortPipeline: true
                }
            }
            post {
                success{
                    publishChecks name: 'Sonar', title: 'Sonar Analysis'
                }
                failure {
                    publishChecks conclusion: 'FAILURE', status: 'COMPLETED', name: 'Sonar', title: 'Sonar Analysis'
                }
            }
        }
        stage('Build') {
            steps {
               sh 'npm run build'
            }
            post {
                success {
                    archiveArtifacts 'build/**/*'
                    publishChecks name: 'Build', title: 'Build'
                }
                failure {
                    publishChecks conclusion: 'FAILURE', status: 'COMPLETED', name: 'Build', title: 'Build'
                }

            }
        }

    }
}