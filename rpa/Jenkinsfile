import jenkins.model.*
import groovy.json.JsonSlurper

stage 'Init'
node {
    checkout scm
//    sh 'echo $BRANCH_NAME'
}
pipeline {
    agent { label 'windows' }
/*    options {
        office365ConnectorWebhooks([[
                    startNotification: true,
                    notifySuccess:true,
                    notifyAborted:false,
                    notifyNotBuilt:false,
                    notifyUnstable:true,
                    notifyFailure:true,
                        url: 'https://outlook.office.com/webhook/97ff97f5-b5b6-47bf-8b87-a5303cfdb12d@521e430f-ba3c-4d47-9f97-16b945b0a850/JenkinsCI/785447a441c84a12b33ecc6d8150d959/dc81ee26-68e3-4127-a13f-1d6c9a472eb6'
            ]]
        )
    }
*/
    environment {
        def props = readJSON file: 'Project/project.json'
		def projectName = "${props.name}".trim()
        def projVersion = "${props.projectVersion}".trim()
    }
    stages {
        stage("Reading JSON attributes") {
            steps {
                script {
                    echo "Nombre del proyecto: ${projectName}"
					echo "Version del proyecto: ${projVersion}"
                }
            }
        }
        stage("Sonarqube Analysis") {
            when {
                expression { isUnix() == false}
            }
            steps {
                withSonarQubeEnv("Sonar-OCP") {
                    bat """
						echo ***** Scanning ----- BRANCH: $BRANCH_NAME ------ *****
						sonar-scanner.bat -D"sonar.projectKey=${projectName}" -D"sonar.sources=." -D"sonar.branch.name=$BRANCH_NAME" -D"X"
					"""
                }
            }
            post {
                success{
                    publishChecks name: 'Sonar', title: 'Sonar Analysis'
                }
                failure {
                    publishChecks conclusion: 'FAILURE', status: 'COMPLETED', name: 'Sonar', title: 'Sonar Analysis'
                }
            }

        }
        stage("Compiling - Building - Signing - Publishing") {
            steps {
 				UiPathPack (
				outputPath: "Output\\${env.BUILD_NUMBER}",
				projectJsonPath: "Project\\project.json",
				version: [$class: 'ManualVersionEntry', version: "${projVersion}"]
				)
				bat """
					dir Output\\${env.BUILD_NUMBER}
					echo ***** Nexus Publishing ----- ARTIFACT: ${env.BUILD_NUMBER} ------ *****
					nuget push Output\\${env.BUILD_NUMBER}\\${projectName}.${projVersion}.nupkg c92cbba1-e8fc-3150-b584-c44b736971ab -Source https://nexus-nexus.noprod-apps.pro.edenor/nexus/service/local/nuget/nuget-releases/
					"""
			}
            post {
                success {
                    archiveArtifacts "Output\\${env.BUILD_NUMBER}\\${projectName}.${projVersion}.nupkg"
                    publishChecks name: 'Build', title: 'Build'
                }
                failure {
                    publishChecks conclusion: 'FAILURE', status: 'COMPLETED', name: 'Build', title: 'Build'
                }
            }
		}
		
        stage('Sonar Finish'){
            steps {
                // finish
                // step([$class: 'MsBuildSQRunnerEnd'])
                bat 'echo finish'
            }
        }
    }
}